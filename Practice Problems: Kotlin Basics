2.Print messages

fun main() {
    println("Use the val keyword when the value doesn't change.")
    println("Use the var keyword when the value can change.")
    println("When you define a function, you define the parameters that can be passed to it.")
    println("When you call a function, you pass arguments for the parameters.")
}
String templates
fun main() {
    val discountPercentage = 20
    val item = "Google Chromecast"
    val offer = "Sale  - Up to $discountPercentage% discount off $item! Hurry Up!"

    println(offer)
}

fun main() {
    val numberOfAdults = 20
    val numberOfKids = 30
    val total = numberOfAdults + numberOfKids
    println("The total party size is: $total")
}

Implementing basic math operations

fun main() {
    val firstNumber = 10
    val secondNumber = 5

    val result = firstNumber + secondNumber
    println("$firstNumber + $secondNumber = $result")
}

fun main() {
    val firstNumber = 10
    val secondNumber = 5
    val thirdNumber = 8
    
    val result = add(firstNumber + secondNumber)
    val anotherResult = add(firstNumber + thirdNumber)
    
    println("$firstNumber + $secondNumber = $result")
    println("$firstNumber + $thirdNumber = $anotherResult")
}

fun add(result: Int): Int {
    return result
}

Default parameters

fun main() {
    val operatingSystem = "Chrome OS"
    val email = "zikrihayat456@gmail.com"

    println(displayAlertMessage(operatingSystem, email))
}

fun displayAlertMessage(os: String,email: String): String {
  return "There's a new sign-in request on $os for your Google Account $email."
}

fun main() {
    val operatingSystem = "Mac OS"
    val email = "sensei.jepun@gmail.com"
    
    println(displayAlertMessage(operatingSystem, email))
    
    val secondUserOperatingSystem = "Windows"
    val secondUserEmailId = "mirul_uitm@gmail.com"
    
    println(displayAlertMessage(secondUserOperatingSystem, secondUserEmailId))
    println()
    
    val thirdUserOperatingSystem = "Chrome OS"
    val thirdUserEmailId = "focihesmes@gmail.com"

    println(displayAlertMessage(thirdUserOperatingSystem, thirdUserEmailId))
    println()
}

fun displayAlertMessage(os: String,email: String): String {
  return "There's a new sign-in request on $os for your Google Account $email."
}

Pedometer

fun main() {
    val Steps = 4000
    val caloriesBurned = PEDOMETERstepsTOcalories(Steps);
    println("Walking $Steps steps burns $caloriesBurned calories") 
}

fun PEDOMETERstepsTOcalories(NumberOFStepS: Int): Double {
    val CaloriesBURNEDforEachStep = 0.04
    val TotalCALORIESburned = NumberOFStepS * CaloriesBURNEDforEachStep
    return TotalCALORIESburned
}

Compare two numbers

Modern mobile phons have a built-in feature that tracks screen time, or the the time you spend
on your phone each day.

functions with arguments:

timeSpentToday = 300 and timeSpentYesterday = 250, the functuon returns a true value.
timeSpentToday = 300 and timeSpentYesterday = 300, the function returns a false value.
timeSpentToday = 200 and timeSpentYesterday = 220, the function returns a false value.

Move duplicate code into a function

fun main() {
    println("City: Ankara")
    println("Low temperature: 27, High temperature: 31")
    println("Chance of rain: 82%")
    println()

    println("City: Tokyo")
    println("Low temperature: 32, High temperature: 36")
    println("Chance of rain: 10%")
    println()
    
    println("City: Cape Town")
    println("Low temperature: 59, High temperature: 64")
    println("Chance of rain: 2%")
    println()
    
    println("City: Guatemala City")
    println("Low temperature: 50, High temperature: 55")
    println("Chance of rain: 7%")
    println()
}

Can you create a function that prints the weather details for a single city to reduce the repetition in the main() function and then do the same for the remaining cities?

fun main() {
    printWeatherDetails("Ankara", 27, 31, 82)
    printWeatherDetails("Tokyo", 32, 36, 10)
    printWeatherDetails("Cape Town", 59, 64, 2)
    printWeatherDetails("Guatemala City", 50, 55, 7)
}

fun printWeatherDetails(city: String, lowTemp: Int, highTemp: Int, rainChance: Int) {
    println("City: $city")
    println("Low temperature: $lowTemp, High temperature: $highTemp")
    println("Chance of rain: $rainChance%")
    println()
}

Can you update the main() function to call the function that you created for each city and pass in the appropriate weather details as arguments?

